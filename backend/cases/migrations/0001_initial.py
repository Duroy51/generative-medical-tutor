# Generated by Django 5.2.7 on 2025-10-24 13:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ClinicalCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_fultang_id",
                    models.CharField(
                        help_text="Identifiant unique du cas dans Fultang",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("non_approuve", "Non Approuvé"),
                            ("approuve", "Approuvé"),
                            ("rejete", "Rejeté"),
                        ],
                        default="non_approuve",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "case_title",
                    models.CharField(
                        help_text="Titre concis du cas, ex: 'Douleur thoracique chez un homme de 55 ans'",
                        max_length=255,
                    ),
                ),
                (
                    "case_summary",
                    models.TextField(
                        help_text="Résumé du cas pour présenter la situation à l'apprenant"
                    ),
                ),
                (
                    "learning_objectives",
                    models.TextField(
                        help_text="Objectifs pédagogiques que l'apprenant doit atteindre avec ce cas"
                    ),
                ),
                ("motif_consultation", models.TextField()),
                ("age", models.PositiveIntegerField()),
                ("sexe", models.CharField(max_length=50)),
                ("etat_civil", models.CharField(blank=True, max_length=100)),
                ("profession", models.CharField(blank=True, max_length=100)),
                ("nombre_enfant", models.PositiveIntegerField(default=0)),
                ("groupe_sanguin", models.CharField(blank=True, max_length=10)),
                (
                    "mode_de_vie",
                    models.JSONField(
                        blank=True,
                        help_text="Objet JSON contenant des infos sur voyage, activité physique, addiction, etc.",
                        null=True,
                    ),
                ),
                (
                    "validated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Expert qui a validé le cas",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComplementaryExam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="ex: 'NFS', 'Radiographie du thorax'", max_length=200
                    ),
                ),
                (
                    "resultat",
                    models.TextField(help_text="Résultats complets ou interprétation"),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CurrentTreatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom du médicament ou du traitement", max_length=200
                    ),
                ),
                ("posologie", models.CharField(blank=True, max_length=200)),
                ("date_debut", models.CharField(blank=True, max_length=100)),
                (
                    "efficacite",
                    models.TextField(
                        blank=True, help_text="Comment le patient perçoit l'efficacité"
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_treatments",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Diagnosis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                (
                    "is_final",
                    models.BooleanField(
                        default=False,
                        help_text="Cochez si c'est le diagnostic final confirmé",
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diagnoses",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MedicalHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("medical", "Médical"),
                            ("chirurgical", "Chirurgical"),
                            ("obstetrical", "Obstétrical"),
                            ("familial", "Familial"),
                            ("allergie", "Allergie"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Détail de l'antécédent, ex: 'Diabète de type 2', 'Appendicectomie en 2010', 'Père décédé d'un infarctus'"
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history_entries",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhysicalFinding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom_examen",
                    models.CharField(
                        help_text="ex: 'Auscultation cardiaque', 'Palpation abdominale'",
                        max_length=200,
                    ),
                ),
                (
                    "resultat_observation",
                    models.TextField(
                        help_text="ex: 'Bruits du cœur réguliers, pas de souffle', 'Abdomen souple et dépressible'"
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="physical_findings",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Symptom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=200)),
                ("localisation", models.CharField(blank=True, max_length=200)),
                (
                    "date_debut",
                    models.CharField(
                        help_text="ex: 'il y a 3 jours', 'depuis ce matin'",
                        max_length=100,
                    ),
                ),
                ("frequence", models.CharField(blank=True, max_length=100)),
                ("duree", models.CharField(blank=True, max_length=100)),
                ("evolution", models.TextField(blank=True)),
                ("activite_declenchante", models.CharField(blank=True, max_length=255)),
                (
                    "degre",
                    models.PositiveIntegerField(
                        help_text="Échelle de douleur/sévérité, ex: 8 sur 10"
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="symptoms",
                        to="cases.clinicalcase",
                    ),
                ),
            ],
        ),
    ]
